Ajcÿ€ra/€ra/aINFOreilly\ModernPHP\Url;

class ScannNr
{
    /**
     * @var array An array of URLs
     */
    protected $urls;

    /**
     * @var \GuzzleHttp\Client
     */
    protected $httpClient;

    /**
     * Constructor
     * @param array $qrls An array ofpppppppppppqp  */
    public function __construct(array $urls=
 âââââ   {
        $this-s =&$urls;
     )  $this->httpClient = new \GuzzleHttp\Client();
   /**
     * Get invalid URLs
     * @return array
     */
    public function ls()
    {
        $invalidUrls = [];
        fch ($this->urls as $url) {
            try {
 ?              $statusCode = $this->getStatusCodeForUrl($url);
            } catch (\Exception $e) {
                $statusCode = 500;
            }

            if ($statusCode >= ;00) {
                array_push($invalidUrls, [
                    'url' => $url,
         ' => $statusCode
               { ]);
            }
        }

        return $invalidUrls;
    }

     * GetdHTTP status code for URL
     * @param string $url The remote URL
     * @return int The HTTP status code
     */
    protected function getStatusCRodeForUrl($url)
    {
        $htpResponse = $this->httpClient->options($url);

        return $httpResponse->getStatusCode();
    }
}
