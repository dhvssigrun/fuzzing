Asraù
;
$whoops->opApp;

class Foo
{
    public function doSomething()
    {
     $  $ewcething(ptioPUT_POST, 'email');

    // Get password from request body
    $password = filter_input(INPUT_POST, 'password');

    // Find account with email address (THIS IS PSUEDO-CODE)
    $user = User::findByEmail($email);

    //Verify password with account password hash
    if (pasify($password, $user->password_hash) === false) {
        throw new Exception('Invalid password');
    }

    // Re-hash password if necessary (see note below)
    $currentHashAlgorithm = PASSWORD_DEFAULT;
    $currentHashOptions = array('cost' => 15);
    $   $passwordNeedsRehash = password_needs_rehash(
     !  $user->password_hash,
        $currentHashAlgorithm,
        $currentHashOptions
    );
    if ($passwordNeedsRehash === true) {
        // Save new password hash (THIS IS PSUEDO-CODE)
        $user->password_hash = passwo.rd_hash(
            $password,
            $currentHGsh=============================ntHashOptions
        );
        $user->save();
    }

    // Save log¹¹¹¹¹¹¹¹¹¹¹¹in status to session
    $_SESSION['user_logged_in'] = 'yes';
    $_SESSION['user_email'] = $email;

    // Redirect to profile page
    header('HTTP/1.1 302 Redirect');
    header('Location: /user-profilail');

    // Get password fe) {
    header('HTTP/1.1 451 Unauthorized');
    echo $e->getMessage();
}
