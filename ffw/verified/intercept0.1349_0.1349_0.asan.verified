(dp0
S'faultaddress'
p1
I1448980999
sS'crashData'
p2
(dp3
S'serverpid'
p4
I25679
sS'asanOutput'
p5
S'=================================================================\n==25679==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x6020000094d2 at pc 0x55d8e37c8058 bp 0x7ffd631a8cf0 sp 0x7ffd631a8ce8\nREAD of size 1 at 0x6020000094d2 thread T0\n    #0 0x55d8e37c8057 in getu16 ../../mongoose.c:10706\n    #1 0x55d8e37c8c01 in parse_mqtt ../../mongoose.c:10794\n    #2 0x55d8e37c90a6 in mqtt_handler ../../mongoose.c:10843\n    #3 0x55d8e37b7675 in mg_call ../../mongoose.c:2404\n    #4 0x55d8e37bb008 in mg_recv_tcp ../../mongoose.c:2931\n    #5 0x55d8e37babc8 in mg_do_recv ../../mongoose.c:2887\n    #6 0x55d8e37babe8 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #7 0x55d8e37c1601 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #8 0x55d8e37c2b30 in mg_socket_if_poll ../../mongoose.c:4200\n    #9 0x55d8e37b8df5 in mg_mgr_poll ../../mongoose.c:2593\n    #10 0x55d8e37aa8b2 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #11 0x7f011c7d7a86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21a86)\n    #12 0x55d8e37aa5f9 in _start (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-6.13-asan+0x65f9)\n\n0x6020000094d2 is located 0 bytes to the right of 2-byte region [0x6020000094d0,0x6020000094d2)\nallocated by thread T0 here:\n    #0 0x7f011ce772c0 in __interceptor_realloc (/usr/lib/x86_64-linux-gnu/libasan.so.5+0xe92c0)\n    #1 0x55d8e37b1a0c in mbuf_resize ../../mongoose.c:1549\n    #2 0x55d8e37b1ac8 in mbuf_trim ../../mongoose.c:1563\n    #3 0x55d8e37bafb0 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x55d8e37babc8 in mg_do_recv ../../mongoose.c:2887\n    #5 0x55d8e37babe8 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x55d8e37c1601 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x55d8e37c2b30 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x55d8e37b8df5 in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x55d8e37aa8b2 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0x7f011c7d7a86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21a86)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10706 in getu16\nShadow bytes around the buggy address:\n  0x0c047fff9240: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fd\n  0x0c047fff9250: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x0c047fff9260: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x0c047fff9270: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fd\n  0x0c047fff9280: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fd\n=>0x0c047fff9290: fa fa fd fd fa fa 00 00 fa fa[02]fa fa fa fa fa\n  0x0c047fff92a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff92b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff92c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff92d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c047fff92e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==25679==ABORTING\n'
p6
sS'reallydead'
p7
I-6
sS'signum'
p8
I0
sS'exitcode'
p9
I0
sS'fuzzerPos'
p10
S'C'
p11
sS'corpusData'
p12
(dp13
S'parentFilename'
p14
S'intercept0.pickle'
p15
sS'time'
p16
NsS'filename'
p17
S'intercept0.1349_0.pickle'
p18
sS'seed'
p19
S'1349468513997875025'
p20
sS'fuzzer'
p21
S'Radamsa'
p22
sS'networkData'
p23
(lp24
(dp25
S'latency'
p26
NsS'from'
p27
S'cli'
p28
sS'index'
p29
I0
sS'timeouts'
p30
I0
sS'isFuzzed'
p31
I01
sS'data'
p32
S'T\x00'
p33
sa(dp34
g30
I0
sg27
S'srv'
p35
sg32
S' \x02\x00\x00'
p36
sg29
I1
sg26
Nsa(dp37
g30
I0
sg27
g28
sg32
S'\x82\x0c\x00\x01\x00\x07area-51\x00'
p38
sg29
I2
sg26
Nsa(dp39
g30
I0
sg27
g35
sg32
S'\x92\x03\x00\x01\x00'
p40
sg29
I3
sg26
Nsa(dp41
g30
I0
sg27
g28
sg32
S'0\x0e\x00\x07area-51hello'
p42
sg29
I4
sg26
Nsa(dp43
g30
I0
sg27
g35
sg32
S'0\x0e\x00\x07area-51hello'
p44
sg29
I5
sg26
Nsa(dp45
g30
I0
sg27
g28
sg32
S'\xa2\x0b\x00\x03\x00\x07area-51'
p46
sg29
I6
sg26
Nsassg17
S'intercept0.1349_0.1349_0.crash'
p47
ssS'processStdout'
p48
NsS'backtrace'
p49
(lp50
S'in getu16'
p51
aS'in parse_mqtt'
p52
aS'in mqtt_handler'
p53
aS'in mg_call'
p54
aS'in mg_recv_tcp'
p55
aS'in mg_do_recv'
p56
aS'in mg_if_can_recv_cb'
p57
aS'in mg_mgr_handle_conn'
p58
aS'in mg_socket_if_poll'
p59
aS'in mg_mgr_poll'
p60
aS'in main'
p61
aS'in __libc_start_main'
p62
aS' (mqtt_broker-asan32+0x2b60)'
p63
aS'located 0'
p64
aS'thread T0'
p65
aS'in realloc'
p66
aS'in mbuf_resize'
p67
aS'in mbuf_trim'
p68
aS'in mg_recv_tcp'
p69
aS'in mg_do_recv'
p70
aS'in mg_if_can_recv_cb'
p71
aS'in mg_mgr_handle_conn'
p72
aS'in mg_socket_if_poll'
p73
aS'in mg_mgr_poll'
p74
aS'in main'
p75
aS'in __libc_start_main'
p76
aS'heap-buffer-overflow ..mongoose.c:10706'
p77
aS'around the'
p78
aS'fa fa'
p79
aS'fa fa'
p80
aS'fa fa'
p81
aS'fa fa'
p82
aS'fa fa'
p83
aS'fa[02]fa fa'
p84
aS'fa 00'
p85
aS'fa fa'
p86
aS'fa fa'
p87
aS'fa fa'
p88
aS'fa fa'
p89
aS'legend (one'
p90
aS' '
p91
aS'01 02'
p92
aS'redzone: '
p93
aS'region: '
p94
aS'redzone: '
p95
aS'redzone: '
p96
aS'redzone: '
p97
aS'return: '
p98
aS'after scope:'
p99
ag91
aS'order: '
p100
aS'user: '
p101
ag91
ag91
aS'redzone: '
p102
ag91
aS'redzone: '
p103
aS'redzone: '
p104
asS'analyzerType'
p105
S'asan'
p106
sS'analyzerOutput'
p107
S'=================================================================\n==831==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf5400712 at pc 0x565db208 bp 0xffa77d18 sp 0xffa77d0c\nREAD of size 1 at 0xf5400712 thread T0\n    #0 0x565db207 in getu16 ../../mongoose.c:10706\n    #1 0x565dbe8e in parse_mqtt ../../mongoose.c:10794\n    #2 0x565dc34a in mqtt_handler ../../mongoose.c:10843\n    #3 0x565c8ffb in mg_call ../../mongoose.c:2404\n    #4 0x565cd113 in mg_recv_tcp ../../mongoose.c:2931\n    #5 0x565ccc3d in mg_do_recv ../../mongoose.c:2887\n    #6 0x565ccc69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #7 0x565d3f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #8 0x565d5763 in mg_socket_if_poll ../../mongoose.c:4200\n    #9 0x565cac0b in mg_mgr_poll ../../mongoose.c:2593\n    #10 0x565bbe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #11 0xf779e9a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #12 0x565bbb60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf5400712 is located 0 bytes to the right of 2-byte region [0xf5400710,0xf5400712)\nallocated by thread T0 here:\n    #0 0xf7a6a2cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x565c2f49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x565c303f in mbuf_trim ../../mongoose.c:1563\n    #3 0x565cd0b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x565ccc3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x565ccc69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x565d3f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x565d5763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x565cac0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x565bbe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf779e9a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10706 in getu16\nShadow bytes around the buggy address:\n  0x3ea80090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea800e0: fa fa[02]fa fa fa 00 04 fa fa 00 04 fa fa 00 04\n  0x3ea800f0: fa fa 00 04 fa fa 04 fa fa fa fa fa fa fa fa fa\n  0x3ea80100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==831==ABORTING\n'
p108
sS'cause'
p109
S'Heap BoF'
p110
sg17
S'intercept0.1349_0.1349_0.asan.verified'
p111
s.