(dp0
S'faultaddress'
p1
I1449555209
sS'crashData'
p2
(dp3
S'serverpid'
p4
I22026
sS'asanOutput'
p5
S'=================================================================\n==22026==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf530139d at pc 0x5662450a bp 0xffd8c248 sp 0xffd8c23c\nREAD of size 1 at 0xf530139d thread T0\n    #0 0x56624509 in mg_mqtt_next_subscribe_topic ../../mongoose.c:11082\n    #1 0x56625a5a in mg_mqtt_broker_handle_subscribe ../../mongoose.c:11265\n    #2 0x56626973 in mg_mqtt_broker ../../mongoose.c:11354\n    #3 0x56601ca6 in ev_handler /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:25\n    #4 0x5662269a in mqtt_handler ../../mongoose.c:10867\n    #5 0x5660effb in mg_call ../../mongoose.c:2404\n    #6 0x56613113 in mg_recv_tcp ../../mongoose.c:2931\n    #7 0x56612c3d in mg_do_recv ../../mongoose.c:2887\n    #8 0x56612c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #9 0x56619f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #10 0x5661b763 in mg_socket_if_poll ../../mongoose.c:4200\n    #11 0x56610c0b in mg_mgr_poll ../../mongoose.c:2593\n    #12 0x56601e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #13 0xf77609a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #14 0x56601b60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf530139d is located 0 bytes to the right of 13-byte region [0xf5301390,0xf530139d)\nallocated by thread T0 here:\n    #0 0xf7a2c2cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x56608f49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x5660903f in mbuf_trim ../../mongoose.c:1563\n    #3 0x566130b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x56612c3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x56612c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x56619f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x5661b763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x56610c0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x56601e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77609a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:11082 in mg_mqtt_next_subscribe_topic\nShadow bytes around the buggy address:\n  0x3ea60220: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60230: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60240: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60250: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60260: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea60270: fa fa 00[05]fa fa fd fa fa fa fd fa fa fa 00 04\n  0x3ea60280: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fa\n  0x3ea60290: fa fa fd fa fa fa fd fd fa fa fd fd fa fa fd fd\n  0x3ea602a0: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fa\n  0x3ea602b0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x3ea602c0: fa fa fd fa fa fa fd fd fa fa fd fd fa fa fd fd\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==22026==ABORTING\n'
p6
sS'reallydead'
p7
I-6
sS'signum'
p8
I0
sS'exitcode'
p9
I0
sS'fuzzerPos'
p10
S'B'
p11
sS'corpusData'
p12
(dp13
S'parentFilename'
p14
S'intercept0.pickle'
p15
sS'time'
p16
NsS'filename'
p17
S'intercept0.1773_2.pickle'
p18
sS'seed'
p19
S'17732106937841861956'
p20
sS'fuzzer'
p21
S'Radamsa'
p22
sS'networkData'
p23
(lp24
(dp25
S'timeouts'
p26
I0
sS'from'
p27
S'cli'
p28
sS'data'
p29
S'\x10\x11\x00\x04MQTT\x04\x00\x00<\x00\x05dummy'
p30
sS'index'
p31
I0
sS'latency'
p32
Nsa(dp33
g26
I0
sg27
S'srv'
p34
sg29
S' \x02\x00\x00'
p35
sg31
I1
sg32
Nsa(dp36
g32
Nsg27
g28
sg31
I2
sg26
I0
sS'isFuzzed'
p37
I01
sg29
S'\x82\x0b\x00*\x00\x05/stuef\xff'
p38
sa(dp39
g26
I0
sg27
g34
sg29
S'\x92\x03\x00*\x00'
p40
sg31
I3
sg32
Nsassg17
S'intercept0.1773_2.1773_2.crash'
p41
ssS'processStdout'
p42
NsS'backtrace'
p43
(lp44
S'in mg_mqtt_next_subscribe_topic'
p45
aS'in mg_mqtt_broker_handle_subscribe'
p46
aS'in mg_mqtt_broker'
p47
aS'in ev_handler'
p48
aS'in mqtt_handler'
p49
aS'in mg_call'
p50
aS'in mg_recv_tcp'
p51
aS'in mg_do_recv'
p52
aS'in mg_if_can_recv_cb'
p53
aS'in mg_mgr_handle_conn'
p54
aS'in mg_socket_if_poll'
p55
aS'in mg_mgr_poll'
p56
aS'in main'
p57
aS'in __libc_start_main'
p58
aS' (mqtt_broker-asan32+0x2b60)'
p59
aS'located 0'
p60
aS'thread T0'
p61
aS'in realloc'
p62
aS'in mbuf_resize'
p63
aS'in mbuf_trim'
p64
aS'in mg_recv_tcp'
p65
aS'in mg_do_recv'
p66
aS'in mg_if_can_recv_cb'
p67
aS'in mg_mgr_handle_conn'
p68
aS'in mg_socket_if_poll'
p69
aS'in mg_mgr_poll'
p70
aS'in main'
p71
aS'in __libc_start_main'
p72
aS'heap-buffer-overflow ..mongoose.c:11082'
p73
aS'around the'
p74
aS'fa fa'
p75
aS'fa fa'
p76
aS'fa fa'
p77
aS'fa fa'
p78
aS'fa fa'
p79
aS'fa fa'
p80
aS'fa fd'
p81
aS'fa 00'
p82
aS'fa fa'
p83
aS'fa fa'
p84
aS'fa fa'
p85
aS'legend (one'
p86
aS' '
p87
aS'01 02'
p88
aS'redzone: '
p89
aS'region: '
p90
aS'redzone: '
p91
aS'redzone: '
p92
aS'redzone: '
p93
aS'return: '
p94
aS'after scope:'
p95
ag87
aS'order: '
p96
aS'user: '
p97
ag87
ag87
aS'redzone: '
p98
ag87
aS'redzone: '
p99
aS'redzone: '
p100
asS'analyzerType'
p101
S'asan'
p102
sS'analyzerOutput'
p103
S'=================================================================\n==24309==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf53006dd at pc 0x5666750a bp 0xffb636d8 sp 0xffb636cc\nREAD of size 1 at 0xf53006dd thread T0\n    #0 0x56667509 in mg_mqtt_next_subscribe_topic ../../mongoose.c:11082\n    #1 0x56668a5a in mg_mqtt_broker_handle_subscribe ../../mongoose.c:11265\n    #2 0x56669973 in mg_mqtt_broker ../../mongoose.c:11354\n    #3 0x56644ca6 in ev_handler /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:25\n    #4 0x5666569a in mqtt_handler ../../mongoose.c:10867\n    #5 0x56651ffb in mg_call ../../mongoose.c:2404\n    #6 0x56656113 in mg_recv_tcp ../../mongoose.c:2931\n    #7 0x56655c3d in mg_do_recv ../../mongoose.c:2887\n    #8 0x56655c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #9 0x5665cf31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #10 0x5665e763 in mg_socket_if_poll ../../mongoose.c:4200\n    #11 0x56653c0b in mg_mgr_poll ../../mongoose.c:2593\n    #12 0x56644e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #13 0xf77519a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #14 0x56644b60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf53006dd is located 0 bytes to the right of 13-byte region [0xf53006d0,0xf53006dd)\nallocated by thread T0 here:\n    #0 0xf7a1d2cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x5664bf49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x5664c03f in mbuf_trim ../../mongoose.c:1563\n    #3 0x566560b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x56655c3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x56655c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x5665cf31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x5665e763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x56653c0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x56644e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77519a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:11082 in mg_mqtt_next_subscribe_topic\nShadow bytes around the buggy address:\n  0x3ea60080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea600a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea600b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea600c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea600d0: fa fa fa fa fa fa fa fa fa fa 00[05]fa fa fd fa\n  0x3ea600e0: fa fa fd fa fa fa 00 04 fa fa fd fd fa fa 00 04\n  0x3ea600f0: fa fa 00 04 fa fa 04 fa fa fa fa fa fa fa fa fa\n  0x3ea60100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==24309==ABORTING\n'
p104
sS'cause'
p105
S'Heap BoF'
p106
sg17
S'intercept0.1773_2.1773_2.asan.verified'
p107
s.