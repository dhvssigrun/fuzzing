(dp0
S'faultaddress'
p1
I1449587276
sS'crashData'
p2
(dp3
S'serverpid'
p4
I19016
sS'asanOutput'
p5
S'=================================================================\n==19016==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf5402113 at pc 0x5659d24d bp 0xffc4c718 sp 0xffc4c70c\nREAD of size 1 at 0xf5402113 thread T0\n    #0 0x5659d24c in getu16 ../../mongoose.c:10706\n    #1 0x5659de8e in parse_mqtt ../../mongoose.c:10794\n    #2 0x5659e34a in mqtt_handler ../../mongoose.c:10843\n    #3 0x5658affb in mg_call ../../mongoose.c:2404\n    #4 0x5658f113 in mg_recv_tcp ../../mongoose.c:2931\n    #5 0x5658ec3d in mg_do_recv ../../mongoose.c:2887\n    #6 0x5658ec69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #7 0x56595f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #8 0x56597763 in mg_socket_if_poll ../../mongoose.c:4200\n    #9 0x5658cc0b in mg_mgr_poll ../../mongoose.c:2593\n    #10 0x5657de98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #11 0xf77979a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #12 0x5657db60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf5402113 is located 0 bytes to the right of 3-byte region [0xf5402110,0xf5402113)\nallocated by thread T0 here:\n    #0 0xf7a632cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x56584f49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x5658503f in mbuf_trim ../../mongoose.c:1563\n    #3 0x5658f0b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x5658ec3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x5658ec69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x56595f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x56597763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x5658cc0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x5657de98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77979a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10706 in getu16\nShadow bytes around the buggy address:\n  0x3ea803d0: fa fa fd fd fa fa fd fd fa fa fd fd fa fa fd fd\n  0x3ea803e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea803f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80400: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80410: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea80420: fa fa[03]fa fa fa fd fa fa fa fd fa fa fa 00 04\n  0x3ea80430: fa fa fd fd fa fa fd fa fa fa fd fd fa fa fd fa\n  0x3ea80440: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\n  0x3ea80450: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fa\n  0x3ea80460: fa fa fd fa fa fa fd fd fa fa fd fd fa fa fd fd\n  0x3ea80470: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==19016==ABORTING\n'
p6
sS'reallydead'
p7
I-6
sS'signum'
p8
I0
sS'exitcode'
p9
I0
sS'fuzzerPos'
p10
S'B'
p11
sS'corpusData'
p12
(dp13
S'parentFilename'
p14
S'intercept0.pickle'
p15
sS'time'
p16
NsS'filename'
p17
S'intercept0.1254_2.pickle'
p18
sS'seed'
p19
S'12543309296885232244'
p20
sS'fuzzer'
p21
S'Radamsa'
p22
sS'networkData'
p23
(lp24
(dp25
S'timeouts'
p26
I0
sS'from'
p27
S'cli'
p28
sS'data'
p29
S'\x10\x11\x00\x04MQTT\x04\x00\x00<\x00\x05dummy'
p30
sS'index'
p31
I0
sS'latency'
p32
Nsa(dp33
g26
I0
sg27
S'srv'
p34
sg29
S' \x02\x00\x00'
p35
sg31
I1
sg32
Nsa(dp36
g32
Nsg27
g28
sg31
I2
sg26
I0
sS'isFuzzed'
p37
I01
sg29
S'f\x00*'
p38
sa(dp39
g26
I0
sg27
g34
sg29
S'\x92\x03\x00*\x00'
p40
sg31
I3
sg32
Nsassg17
S'intercept0.1254_2.1254_2.crash'
p41
ssS'processStdout'
p42
NsS'backtrace'
p43
(lp44
S'in getu16'
p45
aS'in parse_mqtt'
p46
aS'in mqtt_handler'
p47
aS'in mg_call'
p48
aS'in mg_recv_tcp'
p49
aS'in mg_do_recv'
p50
aS'in mg_if_can_recv_cb'
p51
aS'in mg_mgr_handle_conn'
p52
aS'in mg_socket_if_poll'
p53
aS'in mg_mgr_poll'
p54
aS'in main'
p55
aS'in __libc_start_main'
p56
aS' (mqtt_broker-asan32+0x2b60)'
p57
aS'located 0'
p58
aS'thread T0'
p59
aS'in realloc'
p60
aS'in mbuf_resize'
p61
aS'in mbuf_trim'
p62
aS'in mg_recv_tcp'
p63
aS'in mg_do_recv'
p64
aS'in mg_if_can_recv_cb'
p65
aS'in mg_mgr_handle_conn'
p66
aS'in mg_socket_if_poll'
p67
aS'in mg_mgr_poll'
p68
aS'in main'
p69
aS'in __libc_start_main'
p70
aS'heap-buffer-overflow ..mongoose.c:10706'
p71
aS'around the'
p72
aS'fa fa'
p73
aS'fa fa'
p74
aS'fa fa'
p75
aS'fa fa'
p76
aS'fa fa'
p77
aS'fa fa'
p78
aS'fa fd'
p79
aS'fa 00'
p80
aS'fa fa'
p81
aS'fa fa'
p82
aS'fa fa'
p83
aS'legend (one'
p84
aS' '
p85
aS'01 02'
p86
aS'redzone: '
p87
aS'region: '
p88
aS'redzone: '
p89
aS'redzone: '
p90
aS'redzone: '
p91
aS'return: '
p92
aS'after scope:'
p93
ag85
aS'order: '
p94
aS'user: '
p95
ag85
ag85
aS'redzone: '
p96
ag85
aS'redzone: '
p97
aS'redzone: '
p98
asS'analyzerType'
p99
S'asan'
p100
sS'analyzerOutput'
p101
S'=================================================================\n==24270==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf54006d3 at pc 0x5666f24d bp 0xffbdedc8 sp 0xffbdedbc\nREAD of size 1 at 0xf54006d3 thread T0\n    #0 0x5666f24c in getu16 ../../mongoose.c:10706\n    #1 0x5666fe8e in parse_mqtt ../../mongoose.c:10794\n    #2 0x5667034a in mqtt_handler ../../mongoose.c:10843\n    #3 0x5665cffb in mg_call ../../mongoose.c:2404\n    #4 0x56661113 in mg_recv_tcp ../../mongoose.c:2931\n    #5 0x56660c3d in mg_do_recv ../../mongoose.c:2887\n    #6 0x56660c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #7 0x56667f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #8 0x56669763 in mg_socket_if_poll ../../mongoose.c:4200\n    #9 0x5665ec0b in mg_mgr_poll ../../mongoose.c:2593\n    #10 0x5664fe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #11 0xf77929a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #12 0x5664fb60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf54006d3 is located 0 bytes to the right of 3-byte region [0xf54006d0,0xf54006d3)\nallocated by thread T0 here:\n    #0 0xf7a5e2cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x56656f49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x5665703f in mbuf_trim ../../mongoose.c:1563\n    #3 0x566610b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x56660c3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x56660c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x56667f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x56669763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x5665ec0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x5664fe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77929a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10706 in getu16\nShadow bytes around the buggy address:\n  0x3ea80080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea800c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea800d0: fa fa fa fa fa fa fa fa fa fa[03]fa fa fa fd fa\n  0x3ea800e0: fa fa fd fa fa fa 00 04 fa fa fd fd fa fa 00 04\n  0x3ea800f0: fa fa 00 04 fa fa 04 fa fa fa fa fa fa fa fa fa\n  0x3ea80100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea80120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==24270==ABORTING\n'
p102
sS'cause'
p103
S'Heap BoF'
p104
sg17
S'intercept0.1254_2.1254_2.asan.verified'
p105
s.