(dp0
S'faultaddress'
p1
I1449226828
sS'crashData'
p2
(dp3
S'serverpid'
p4
I19001
sS'asanOutput'
p5
S'=================================================================\n==19001==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf4904553 at pc 0x565db24d bp 0xffd375c8 sp 0xffd375bc\nREAD of size 1 at 0xf4904553 thread T0\n    #0 0x565db24c in getu16 ../../mongoose.c:10706\n    #1 0x565db27b in scanto ../../mongoose.c:10710\n    #2 0x565db8a1 in parse_mqtt ../../mongoose.c:10758\n    #3 0x565dc34a in mqtt_handler ../../mongoose.c:10843\n    #4 0x565c8ffb in mg_call ../../mongoose.c:2404\n    #5 0x565cd113 in mg_recv_tcp ../../mongoose.c:2931\n    #6 0x565ccc3d in mg_do_recv ../../mongoose.c:2887\n    #7 0x565ccc69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #8 0x565d3f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #9 0x565d5763 in mg_socket_if_poll ../../mongoose.c:4200\n    #10 0x565cac0b in mg_mgr_poll ../../mongoose.c:2593\n    #11 0x565bbe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #12 0xf770b9a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #13 0x565bbb60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf4904553 is located 0 bytes to the right of 19-byte region [0xf4904540,0xf4904553)\nallocated by thread T0 here:\n    #0 0xf79d72cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x565c2f49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x565c303f in mbuf_trim ../../mongoose.c:1563\n    #3 0x565cd0b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x565ccc3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x565ccc69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x565d3f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x565d5763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x565cac0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x565bbe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf770b9a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10706 in getu16\nShadow bytes around the buggy address:\n  0x3e920850: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e920860: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e920870: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e920880: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e920890: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3e9208a0: fa fa fa fa fa fa fa fa 00 00[03]fa fa fa fd fd\n  0x3e9208b0: fd fd fa fa fd fd fd fd fa fa fa fa fa fa fa fa\n  0x3e9208c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e9208d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e9208e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e9208f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==19001==ABORTING\n'
p6
sS'reallydead'
p7
I-6
sS'signum'
p8
I0
sS'exitcode'
p9
I0
sS'fuzzerPos'
p10
S'B'
p11
sS'corpusData'
p12
(dp13
S'parentFilename'
p14
S'intercept0.pickle'
p15
sS'time'
p16
NsS'filename'
p17
S'intercept0.2604_0.pickle'
p18
sS'seed'
p19
S'2604064738329211202'
p20
sS'fuzzer'
p21
S'Radamsa'
p22
sS'networkData'
p23
(lp24
(dp25
S'latency'
p26
NsS'from'
p27
S'cli'
p28
sS'index'
p29
I0
sS'timeouts'
p30
I0
sS'isFuzzed'
p31
I01
sS'data'
p32
S'\x10\x11\x00\x04\xca\xb6MQTT\x00<\x00\x04dummy'
p33
sa(dp34
g30
I0
sg27
S'srv'
p35
sg32
S' \x02\x00\x00'
p36
sg29
I1
sg26
Nsa(dp37
g30
I0
sg27
g28
sg32
S'\x82\x0b\x00*\x00\x06/stuff\x00'
p38
sg29
I2
sg26
Nsa(dp39
g30
I0
sg27
g35
sg32
S'\x92\x03\x00*\x00'
p40
sg29
I3
sg26
Nsassg17
S'intercept0.2604_0.2604_0.crash'
p41
ssS'processStdout'
p42
NsS'backtrace'
p43
(lp44
S'in getu16'
p45
aS'in scanto'
p46
aS'in parse_mqtt'
p47
aS'in mqtt_handler'
p48
aS'in mg_call'
p49
aS'in mg_recv_tcp'
p50
aS'in mg_do_recv'
p51
aS'in mg_if_can_recv_cb'
p52
aS'in mg_mgr_handle_conn'
p53
aS'in mg_socket_if_poll'
p54
aS'in mg_mgr_poll'
p55
aS'in main'
p56
aS'in __libc_start_main'
p57
aS' (mqtt_broker-asan32+0x2b60)'
p58
aS'located 0'
p59
aS'thread T0'
p60
aS'in realloc'
p61
aS'in mbuf_resize'
p62
aS'in mbuf_trim'
p63
aS'in mg_recv_tcp'
p64
aS'in mg_do_recv'
p65
aS'in mg_if_can_recv_cb'
p66
aS'in mg_mgr_handle_conn'
p67
aS'in mg_socket_if_poll'
p68
aS'in mg_mgr_poll'
p69
aS'in main'
p70
aS'in __libc_start_main'
p71
aS'heap-buffer-overflow ..mongoose.c:10706'
p72
aS'around the'
p73
aS'fa fa'
p74
aS'fa fa'
p75
aS'fa fa'
p76
aS'fa fa'
p77
aS'fa fa'
p78
aS'00[03]fa fa'
p79
aS'fa fa'
p80
aS'fa fa'
p81
aS'fa fa'
p82
aS'fa fa'
p83
aS'fa fa'
p84
aS'legend (one'
p85
aS' '
p86
aS'01 02'
p87
aS'redzone: '
p88
aS'region: '
p89
aS'redzone: '
p90
aS'redzone: '
p91
aS'redzone: '
p92
aS'return: '
p93
aS'after scope:'
p94
ag86
aS'order: '
p95
aS'user: '
p96
ag86
ag86
aS'redzone: '
p97
ag86
aS'redzone: '
p98
aS'redzone: '
p99
asS'analyzerType'
p100
S'asan'
p101
sS'analyzerOutput'
p102
S'=================================================================\n==24173==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf4a00b93 at pc 0x5661724d bp 0xff8aac38 sp 0xff8aac2c\nREAD of size 1 at 0xf4a00b93 thread T0\n    #0 0x5661724c in getu16 ../../mongoose.c:10706\n    #1 0x5661727b in scanto ../../mongoose.c:10710\n    #2 0x566178a1 in parse_mqtt ../../mongoose.c:10758\n    #3 0x5661834a in mqtt_handler ../../mongoose.c:10843\n    #4 0x56604ffb in mg_call ../../mongoose.c:2404\n    #5 0x56609113 in mg_recv_tcp ../../mongoose.c:2931\n    #6 0x56608c3d in mg_do_recv ../../mongoose.c:2887\n    #7 0x56608c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #8 0x5660ff31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #9 0x56611763 in mg_socket_if_poll ../../mongoose.c:4200\n    #10 0x56606c0b in mg_mgr_poll ../../mongoose.c:2593\n    #11 0x565f7e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #12 0xf77a19a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #13 0x565f7b60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf4a00b93 is located 0 bytes to the right of 19-byte region [0xf4a00b80,0xf4a00b93)\nallocated by thread T0 here:\n    #0 0xf7a6d2cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x565fef49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x565ff03f in mbuf_trim ../../mongoose.c:1563\n    #3 0x566090b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x56608c3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x56608c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x5660ff31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x56611763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x56606c0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x565f7e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77a19a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10706 in getu16\nShadow bytes around the buggy address:\n  0x3e940120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e940130: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e940140: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e940150: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e940160: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3e940170: 00 00[03]fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e940180: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e940190: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e9401a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e9401b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3e9401c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==24173==ABORTING\n'
p103
sS'cause'
p104
S'Heap BoF'
p105
sg17
S'intercept0.2604_0.2604_0.asan.verified'
p106
s.