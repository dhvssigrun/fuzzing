(dp0
S'faultaddress'
p1
I1449432329
sS'crashData'
p2
(dp3
S'serverpid'
p4
I19578
sS'asanOutput'
p5
S'=================================================================\n==19578==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf530041d at pc 0x5666250a bp 0xffa53568 sp 0xffa5355c\nREAD of size 1 at 0xf530041d thread T0\n    #0 0x56662509 in mg_mqtt_next_subscribe_topic ../../mongoose.c:11082\n    #1 0x56663a5a in mg_mqtt_broker_handle_subscribe ../../mongoose.c:11265\n    #2 0x56664973 in mg_mqtt_broker ../../mongoose.c:11354\n    #3 0x5663fca6 in ev_handler /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:25\n    #4 0x5666069a in mqtt_handler ../../mongoose.c:10867\n    #5 0x5664cffb in mg_call ../../mongoose.c:2404\n    #6 0x56651113 in mg_recv_tcp ../../mongoose.c:2931\n    #7 0x56650c3d in mg_do_recv ../../mongoose.c:2887\n    #8 0x56650c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #9 0x56657f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #10 0x56659763 in mg_socket_if_poll ../../mongoose.c:4200\n    #11 0x5664ec0b in mg_mgr_poll ../../mongoose.c:2593\n    #12 0x5663fe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #13 0xf77489a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #14 0x5663fb60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf530041d is located 0 bytes to the right of 13-byte region [0xf5300410,0xf530041d)\nallocated by thread T0 here:\n    #0 0xf7a142cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x56646f49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x5664703f in mbuf_trim ../../mongoose.c:1563\n    #3 0x566510b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x56650c3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x56650c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x56657f31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x56659763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x5664ec0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x5663fe98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77489a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:11082 in mg_mqtt_next_subscribe_topic\nShadow bytes around the buggy address:\n  0x3ea60030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea60080: fa fa 00[05]fa fa fd fa fa fa fd fa fa fa 00 04\n  0x3ea60090: fa fa fd fa fa fa fd fa fa fa fd fa fa fa fd fa\n  0x3ea600a0: fa fa fd fa fa fa fd fa fa fa fd fd fa fa fd fd\n  0x3ea600b0: fa fa fd fd fa fa fd fd fa fa fd fa fa fa fd fa\n  0x3ea600c0: fa fa fd fd fa fa fd fa fa fa fd fa fa fa fd fa\n  0x3ea600d0: fa fa fd fa fa fa fd fd fa fa fd fa fa fa fd fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==19578==ABORTING\n'
p6
sS'reallydead'
p7
I-6
sS'signum'
p8
I0
sS'exitcode'
p9
I0
sS'fuzzerPos'
p10
S'B'
p11
sS'corpusData'
p12
(dp13
S'parentFilename'
p14
S'intercept0.pickle'
p15
sS'time'
p16
NsS'filename'
p17
S'intercept0.4474_2.pickle'
p18
sS'seed'
p19
S'447470634536459487'
p20
sS'fuzzer'
p21
S'Radamsa'
p22
sS'networkData'
p23
(lp24
(dp25
S'timeouts'
p26
I0
sS'from'
p27
S'cli'
p28
sS'data'
p29
S'\x10\x11\x00\x04MQTT\x04\x00\x00<\x00\x05dummy'
p30
sS'index'
p31
I0
sS'latency'
p32
Nsa(dp33
g26
I0
sg27
S'srv'
p34
sg29
S' \x02\x00\x00'
p35
sg31
I1
sg32
Nsa(dp36
g32
Nsg27
g28
sg31
I2
sg26
I0
sS'isFuzzed'
p37
I01
sg29
S'\x82\x0b\x00*\x00\x05/stuff\x00'
p38
sa(dp39
g26
I0
sg27
g34
sg29
S'\x92\x03\x00*\x00'
p40
sg31
I3
sg32
Nsassg17
S'intercept0.4474_2.4474_2.crash'
p41
ssS'processStdout'
p42
NsS'backtrace'
p43
(lp44
S'in mg_mqtt_next_subscribe_topic'
p45
aS'in mg_mqtt_broker_handle_subscribe'
p46
aS'in mg_mqtt_broker'
p47
aS'in ev_handler'
p48
aS'in mqtt_handler'
p49
aS'in mg_call'
p50
aS'in mg_recv_tcp'
p51
aS'in mg_do_recv'
p52
aS'in mg_if_can_recv_cb'
p53
aS'in mg_mgr_handle_conn'
p54
aS'in mg_socket_if_poll'
p55
aS'in mg_mgr_poll'
p56
aS'in main'
p57
aS'in __libc_start_main'
p58
aS' (mqtt_broker-asan32+0x2b60)'
p59
aS'located 0'
p60
aS'thread T0'
p61
aS'in realloc'
p62
aS'in mbuf_resize'
p63
aS'in mbuf_trim'
p64
aS'in mg_recv_tcp'
p65
aS'in mg_do_recv'
p66
aS'in mg_if_can_recv_cb'
p67
aS'in mg_mgr_handle_conn'
p68
aS'in mg_socket_if_poll'
p69
aS'in mg_mgr_poll'
p70
aS'in main'
p71
aS'in __libc_start_main'
p72
aS'heap-buffer-overflow ..mongoose.c:11082'
p73
aS'around the'
p74
aS'fa fa'
p75
aS'fa fa'
p76
aS'fa fa'
p77
aS'fa fa'
p78
aS'fa fa'
p79
aS'fa fa'
p80
aS'fa fd'
p81
aS'fa 00'
p82
aS'fa fa'
p83
aS'fa fa'
p84
aS'fa fa'
p85
aS'legend (one'
p86
aS' '
p87
aS'01 02'
p88
aS'redzone: '
p89
aS'region: '
p90
aS'redzone: '
p91
aS'redzone: '
p92
aS'redzone: '
p93
aS'return: '
p94
aS'after scope:'
p95
ag87
aS'order: '
p96
aS'user: '
p97
ag87
ag87
aS'redzone: '
p98
ag87
aS'redzone: '
p99
aS'redzone: '
p100
asS'analyzerType'
p101
S'asan'
p102
sS'analyzerOutput'
p103
S'=================================================================\n==24186==ERROR: AddressSanitizer: heap-buffer-overflow on address 0xf53006dd at pc 0x5664950a bp 0xffccef78 sp 0xffccef6c\nREAD of size 1 at 0xf53006dd thread T0\n    #0 0x56649509 in mg_mqtt_next_subscribe_topic ../../mongoose.c:11082\n    #1 0x5664aa5a in mg_mqtt_broker_handle_subscribe ../../mongoose.c:11265\n    #2 0x5664b973 in mg_mqtt_broker ../../mongoose.c:11354\n    #3 0x56626ca6 in ev_handler /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:25\n    #4 0x5664769a in mqtt_handler ../../mongoose.c:10867\n    #5 0x56633ffb in mg_call ../../mongoose.c:2404\n    #6 0x56638113 in mg_recv_tcp ../../mongoose.c:2931\n    #7 0x56637c3d in mg_do_recv ../../mongoose.c:2887\n    #8 0x56637c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #9 0x5663ef31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #10 0x56640763 in mg_socket_if_poll ../../mongoose.c:4200\n    #11 0x56635c0b in mg_mgr_poll ../../mongoose.c:2593\n    #12 0x56626e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #13 0xf77559a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n    #14 0x56626b60  (/home/kali/fuzzing/victims/mongoose-6.13/bin/mqtt_broker-asan32+0x2b60)\n\n0xf53006dd is located 0 bytes to the right of 13-byte region [0xf53006d0,0xf53006dd)\nallocated by thread T0 here:\n    #0 0xf7a212cc in realloc (/usr/lib/i386-linux-gnu/libasan.so.5+0xeb2cc)\n    #1 0x5662df49 in mbuf_resize ../../mongoose.c:1549\n    #2 0x5662e03f in mbuf_trim ../../mongoose.c:1563\n    #3 0x566380b8 in mg_recv_tcp ../../mongoose.c:2930\n    #4 0x56637c3d in mg_do_recv ../../mongoose.c:2887\n    #5 0x56637c69 in mg_if_can_recv_cb ../../mongoose.c:2893\n    #6 0x5663ef31 in mg_mgr_handle_conn ../../mongoose.c:4009\n    #7 0x56640763 in mg_socket_if_poll ../../mongoose.c:4200\n    #8 0x56635c0b in mg_mgr_poll ../../mongoose.c:2593\n    #9 0x56626e98 in main /home/kali/fuzzing/victims/mongoose-6.13/examples/mqtt_broker/mqtt_broker.c:51\n    #10 0xf77559a0 in __libc_start_main (/lib/i386-linux-gnu/libc.so.6+0x199a0)\n\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:11082 in mg_mqtt_next_subscribe_topic\nShadow bytes around the buggy address:\n  0x3ea60080: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60090: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea600a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea600b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea600c0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x3ea600d0: fa fa fa fa fa fa fa fa fa fa 00[05]fa fa fd fa\n  0x3ea600e0: fa fa fd fa fa fa 00 04 fa fa fd fd fa fa 00 04\n  0x3ea600f0: fa fa 00 04 fa fa 04 fa fa fa fa fa fa fa fa fa\n  0x3ea60100: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60110: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x3ea60120: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==24186==ABORTING\n'
p104
sS'cause'
p105
S'Heap BoF'
p106
sg17
S'intercept0.4474_2.4474_2.asan.verified'
p107
s.