(dp0
S'serverpid'
p1
I11037
sS'asanOutput'
p2
S'=================================================================\n==11037==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x61900001be4e at pc 0x557b13fe0baa bp 0x7ffeafe54e60 sp 0x7ffeafe54e58\nREAD of size 1 at 0x61900001be4e thread T0\n    #0 0x557b13fe0ba9 in mg_mqtt_next_subscribe_topic ../../mongoose.c:10131\n    #1 0x557b13fe1d7e in mg_mqtt_broker_handle_subscribe ../../mongoose.c:10298\n    #2 0x557b13fe27ed in mg_mqtt_broker ../../mongoose.c:10360\n    #3 0x557b13fdf0e7 in mqtt_handler ../../mongoose.c:9941\n    #4 0x557b13fca8a1 in mg_call ../../mongoose.c:2037\n    #5 0x557b13fce24f in mg_recv_common ../../mongoose.c:2512\n    #6 0x557b13fce2cb in mg_if_recv_tcp_cb ../../mongoose.c:2516\n    #7 0x557b13fd4427 in mg_handle_tcp_read ../../mongoose.c:3388\n    #8 0x557b13fd53a2 in mg_mgr_handle_conn ../../mongoose.c:3513\n    #9 0x557b13fd6959 in mg_socket_if_poll ../../mongoose.c:3705\n    #10 0x557b13fcbfa8 in mg_mgr_poll ../../mongoose.c:2231\n    #11 0x557b13fbfa3a in main /home/kali/fuzzing/victims/mongoose-6.8/examples/mqtt_broker/mqtt_broker.c:43\n    #12 0x7fc046e40a86 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x21a86)\n    #13 0x557b13fbf7c9 in _start (/home/kali/fuzzing/victims/mongoose-6.8/bin/mqtt_broker-asan+0x77c9)\n\nAddress 0x61900001be4e is a wild pointer.\nSUMMARY: AddressSanitizer: heap-buffer-overflow ../../mongoose.c:10131 in mg_mqtt_next_subscribe_topic\nShadow bytes around the buggy address:\n  0x0c327fffb770: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb780: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb790: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb7a0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb7b0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n=>0x0c327fffb7c0: fa fa fa fa fa fa fa fa fa[fa]fa fa fa fa fa fa\n  0x0c327fffb7d0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb7e0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb7f0: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb800: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\n  0x0c327fffb810: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa\nShadow byte legend (one shadow byte represents 8 application bytes):\n  Addressable:           00\n  Partially addressable: 01 02 03 04 05 06 07 \n  Heap left redzone:       fa\n  Freed heap region:       fd\n  Stack left redzone:      f1\n  Stack mid redzone:       f2\n  Stack right redzone:     f3\n  Stack after return:      f5\n  Stack use after scope:   f8\n  Global redzone:          f9\n  Global init order:       f6\n  Poisoned by user:        f7\n  Container overflow:      fc\n  Array cookie:            ac\n  Intra object redzone:    bb\n  ASan internal:           fe\n  Left alloca redzone:     ca\n  Right alloca redzone:    cb\n==11037==ABORTING\n'
p3
sS'reallydead'
p4
I-6
sS'signum'
p5
I0
sS'exitcode'
p6
I0
sS'fuzzerPos'
p7
S'C'
p8
sS'corpusData'
p9
(dp10
S'parentFilename'
p11
S'intercept0.pickle'
p12
sS'time'
p13
NsS'filename'
p14
S'intercept0.1562_0.pickle'
p15
sS'seed'
p16
S'15628585961779922008'
p17
sS'fuzzer'
p18
S'Radamsa'
p19
sS'networkData'
p20
(lp21
(dp22
S'latency'
p23
NsS'from'
p24
S'cli'
p25
sS'index'
p26
I0
sS'timeouts'
p27
I0
sS'isFuzzed'
p28
I01
sS'data'
p29
S'\x10\x14\x00\x04MQTT\x04\x02\x00<\x00\x08mq\x8ft-spy'
p30
sa(dp31
g27
I0
sg29
S' \x02\x00\x00'
p32
sg24
S'srv'
p33
sg23
Nsg26
I1
sa(dp34
g27
I0
sg29
S'\x82\x0c\x00\x01\x00\x07area-51\x00'
p35
sg24
g25
sg23
Nsg26
I2
sa(dp36
g27
I0
sg29
S'\x92\x03\x00\x01\x00'
p37
sg24
g33
sg23
Nsg26
I3
sa(dp38
g27
I0
sg29
S'0\x0e\x00\x07area-51hello'
p39
sg24
g25
sg23
Nsg26
I4
sa(dp40
g27
I0
sg29
S'0\x0e\x00\x07area-51hello'
p41
sg24
g33
sg23
Nsg26
I5
sa(dp42
g27
I0
sg29
S'\xa2\x0b\x00\x03\x00\x07area-51'
p43
sg24
g25
sg23
Nsg26
I6
sassg14
S'intercept0.1562_0.1562_0.crash'
p44
s.